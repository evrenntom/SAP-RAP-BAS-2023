managed with additional save implementation in class ZBP_I_AGREEMENTTYPE_S unique;
strict;
with draft;

define behavior for ZI_AgreementType_S alias AgreementTypeAll
draft table ZRPSG_AM_C00_D_S
with unmanaged save
lock master total etag LastChangedAtMax
authorization master( global )

{
  field ( readonly )
   SingletonID;


  update;
  internal create;
  internal delete;

  draft action ( features : instance ) Edit;
  draft action Activate;
  draft action Discard;
  draft action Resume;
  draft determine action Prepare {
    validation AgreementTypeZ ~ ValidateDataConsistency;
  }
  action ( features : instance ) SelectCustomizingTransptReq parameter D_SelectCustomizingTransptReqP result [1] $self;

  association _AgreementType { create ( features : instance ); with draft; }
}

define behavior for ZI_AgreementType alias AgreementTypeZ
persistent table ZRPSG_AM_C00
draft table ZRPSG_AM_C00_D
etag master LastchangeTimeLocal
lock dependent by _AgreementTypeAll
authorization dependent by _AgreementTypeAll

{
  field ( mandatory : create )
   AgreementType;

  field ( readonly )
   SingletonID,
   LastchangeTime,
   LastchangeTimeLocal,
   ConfigDeprecationCode;

  field ( readonly : update )
   AgreementType;


  update( features : global );
  internal delete;

  factory action ( features : instance ) CopyAgreementType parameter ZD_CopyAgreementTypeP [1];
  action ( features : instance ) Deprecate result [1] $self;
  action ( features : instance ) Invalidate result [1] $self;

  mapping for ZRPSG_AM_C00
  {
    AgreementType = AGREEMENT_TYPE;
    ElementTypeGroupNum = ELEMENT_TYPE_GROUP_NUM;
    Description = DESCRIPTION;
    ConfigDeprecationCode = CONFIGDEPRECATIONCODE;
    LastchangeTime = LASTCHANGE_TIME;
    LastchangeTimeLocal = LASTCHANGE_TIME_LOCAL;
  }

  association _AgreementTypeAll { with draft; }

  validation ValidateTransportRequest on save ##NOT_ASSIGNED_TO_DETACT { create; update; delete; }
  validation ValidateDataConsistency on save { create; update; }
}